<#@ template language="C#" HostSpecific="True" #>
<#@ output extension=".cshtml" #>
<#@ include file="Imports.include.t4" #>
@model IEnumerable<#= "<" + ViewDataTypeName + ">" #>
<# IEnumerable<PropertyMetadata> properties = ModelMetadata.Properties; #>
<#
// The following chained if-statement outputs the file header code and markup for a partial view, a view using a layout page, or a regular view.
if(IsPartialView) {
#>

<#
} else if(IsLayoutPageSelected) {
#>

@{
	ViewBag.TableDisplayName = "Table";
	ViewBag.Title = "<#= ViewName#>";
<#
if (!String.IsNullOrEmpty(LayoutPageFile)) {
#>
    Layout = "<#= LayoutPageFile#>";
<#
}
#>
}

<h2>@ViewBag.Title</h2>

<#
} else {
#>

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title><#= ViewName #></title>
</head>
<body>
<#
    PushIndent("    ");
}
#>

<div class="row">
    <div class="col-md-4">
	<p>
		@Html.ActionLink("新增", "Create")
	</p>
	</div>
	 @using (Html.BeginForm())
    {
		<div class="col-md-4">
        @Html.AntiForgeryToken()

			<#
				
				foreach (PropertyMetadata property in properties) {
				if (property.IsEnum && !property.IsEnumFlags){
			#>
			 @Html.DropDownList("<#= property.PropertyName #>", null,"請選擇",htmlAttributes: new { @class = "form-control" ,@style="display:inline"})
			<input type="submit" class="btn btn-info" value="過濾"></input>    
			<#
				}
				}
			#>
		</div>	 
	    <div class="col-md-4">
            @Html.TextBox("SearchString",null, new { type = "search", placeholder = "請輸入文字...", style = "display:inline" ,@class="form-control  text-box"})
            <input type="submit" class="btn btn-info" value="搜尋"></input>                        
        </div>
    }

</div>
<div class="row">
    <div class="col-md-12">


<table class="table  table-hover table-striped">
    <tr>
<#
foreach (PropertyMetadata property in properties) {
    if (property.Scaffold && !property.IsPrimaryKey && !property.IsForeignKey) {	
#>
<#
        // We do not want to show any association properties for which there is
        // no associated foreign key.
        if (property.IsAssociation && GetRelatedModelMetadata(property) == null) {
            continue;
        }
#>
        <th>
            @Html.DisplayNameFor(model => model.<#= GetValueExpression(property) #>)
        </th>
<#		
    }
}
#>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
<#
foreach (PropertyMetadata property in properties) {
    if (property.Scaffold && !property.IsPrimaryKey && !property.IsForeignKey) {
#>
<#
        // We do not want to show any association properties for which there is
        // no associated foreign key.
        if (property.IsAssociation && GetRelatedModelMetadata(property) == null) {
            continue;
        }
#>
        <td>
            @Html.DisplayFor(modelItem => <#= "item." + GetValueExpression(property) #>)
        </td>
<#		
    }
}

string pkName = GetPrimaryKeyName();
if (pkName != null) {
#>
        <td>
            @Html.ActionLink("編輯", "Edit", new { id=item.<#= pkName #> }) |
            @Html.ActionLink("詳細內容", "Details", new { id=item.<#= pkName #> }) |
            @Html.ActionLink("刪除", "Delete", new { id=item.<#= pkName #> })
        </td>
<#
} else {
#>
        <td>
            @Html.ActionLink("編輯", "Edit", new { /* id=item.PrimaryKey */ }) |
            @Html.ActionLink("詳細內容", "Details", new { /* id=item.PrimaryKey */ }) |
            @Html.ActionLink("刪除", "Delete", new { /* id=item.PrimaryKey */ })
        </td>
<#
}
#>
    </tr>
}

</table>
    </div>

</div>

<div class="row">
    @using (Html.BeginForm(@HttpContext.Current.Request.RequestContext.RouteData.Values["action"].ToString(), @HttpContext.Current.Request.RequestContext.RouteData.Values["controller"].ToString() , FormMethod.Post, new { @class = "paging-form" }))
    {
        int CurrentPage = Convert.ToInt32(ViewData["CurrentPage"]);
        int PageCount = Convert.ToInt32(ViewData["PageCount"]);
<#		foreach (PropertyMetadata property in properties) 
		{
			if (property.IsEnum && !property.IsEnumFlags)
			{
#>			
			@Html.Hidden("<#= property.PropertyName #>",ViewData["<#= property.PropertyName #>"])
<#			}
		}
#>

        @Html.Hidden("SearchString");
        @Html.Hidden("Page", null, new { @id = "hiddenPage" })
        <div style="text-align:center;">
            @if (CurrentPage == 1)
            {
                <input type="submit" value="&lt;&lt;" class="btn paging-dbtn" style="cursor:text;" onclick="return false;" />
                <input type="submit" value="&lt;" class="btn paging-dbtn" style="cursor:text;" onclick="return false;" />
            }
            else
            {
                <input type="submit" value="&lt;&lt;" class="btn btn-default paging-btn" onclick="$('#hiddenPage').val(@(CurrentPage-10))" />
                <input type="submit" value="&lt;" class="btn btn-default paging-btn" onclick="$('#hiddenPage').val(@CurrentPage-1)" />
            }
            @if (CurrentPage == PageCount)
            {
                <input type="submit" value="&gt;" class="btn paging-dbtn" style="cursor:text;" onclick="return false;" />
                <input type="submit" value="&gt;&gt;" class="btn paging-dbtn" style="cursor:text;" onclick="return false;" />
            }
            else
            {
                <input type="submit" value="&gt;" class="btn btn-default paging-btn" onclick="$('#hiddenPage').val(@(CurrentPage+1))" />
                <input type="submit" value="&gt;&gt;" class="btn btn-default paging-btn" onclick="$('#hiddenPage').val(@(CurrentPage+10))" />
            }
        </div>
        <div style="text-align:center;">
            @for (int i = 1; i <= Convert.ToInt32(ViewData["PageCount"]); i++)
            {
                if (Convert.ToInt32(ViewData["CurrentPage"]) == i)
                {
                    <input type="submit" value="@i.ToString()" class="btn paging-dbtn" style="cursor:text" />

                }
                else
                {
                    <input type="submit" value="@i.ToString()" class="paging-btn btn btn-default" onclick="$('#hiddenPage').val($(this).val())" />
                }
            }
        </div>

    }
</div>

<#
// The following code closes the tag used in the case of a view using a layout page and the body and html tags in the case of a regular view page
#>
<#
if(!IsPartialView && !IsLayoutPageSelected) {
    ClearIndent();
#>

</body>
</html>
<#
}
#>
<#@ include file="ModelMetadataFunctions.cs.include.t4" #>